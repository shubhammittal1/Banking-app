package com.excelr.bank.models;

import jakarta.persistence.*;
import jakarta.validation.constraints.DecimalMin;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

@AllArgsConstructor  // Generates a constructor with parameters for all fields
@NoArgsConstructor   // Generates a no-argument constructor
@Data  // Generates getters, setters, equals, hashCode, and toString methods
@Entity  // Marks this class as a JPA entity
@Table(name = "accounts_data")  // Specifies the table name in the database
public class Account {

	// Marks this field as the primary key
	@Id
	// Specifies that the primary key value is automatically generated by the database
	@Column(unique = true)
	private Long accountId;

	private String accountHolderName;

	private String accountNumber;

	private String accountType;

	private String rateOfInterest;

	@DecimalMin(value = "0", message = "balance should be greater than 0")  // Ensures the balance is at least 0.01
	private BigDecimal balance;

	// Defines a many-to-one relationship with the User entity, using lazy loading
	@JoinTable(name = "users_data",
			joinColumns = @JoinColumn(name = "user_id"))
	private Long userId;

	@ManyToOne
	@JoinColumn(name = "bank_id")
	private Bank bank;

	// Maps this field to the "createdAt" column in the database
	@Column(name = "createdAt")
	private LocalDateTime createdAt;

	private String status;

	// Defines a date-time formatter
	private static final DateTimeFormatter FORMATTER = DateTimeFormatter.ofPattern("yy-MM-dd HH:mm:ss");

	// Lifecycle callback that sets createdAt before persisting the entity
	@PrePersist
	public void prePersist() {
		this.createdAt = LocalDateTime.now();
	}

	// Lifecycle callback that sets createdAt before updating the entity
	@PreUpdate
	public void preUpdate() {
		this.createdAt = LocalDateTime.now();
	}

	public String getFormattedCreatedAt() {
		// Returns the formatted createdAt or an empty string if createdAt is null
		return this.createdAt != null ? this.createdAt.format(FORMATTER) : "";
	}
}