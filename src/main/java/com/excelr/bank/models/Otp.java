package com.excelr.bank.models;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.hibernate.annotations.CreationTimestamp;

import java.time.LocalDateTime;

@AllArgsConstructor// Generates a constructor with parameters for all fields
@NoArgsConstructor// Generates a no-argument constructor
@Getter
@Setter
@Entity// Marks this class as a JPA entity
public class Otp {
    // Marks this field as the primary key
    @Id
    // Specifies that the primary key value is automatically generated by the database
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String email;
    private int otp;

    @Column(columnDefinition = "TIMESTAMP")
    @CreationTimestamp
    private LocalDateTime otpCreatedAt;
    private LocalDateTime expiredAt;

    @PrePersist// Lifecycle callback that sets createdAt before persisting the entity
    @PreUpdate// Lifecycle callback that sets createdAt before updating the entity
    public void preUpdate() {
        this.otpCreatedAt = LocalDateTime.now();
        //If `expiredAt` is null, it initializes `expiredAt` to 30 minutes after `otpCreatedAt`.
        if (this.expiredAt == null) {
            this.expiredAt = this.otpCreatedAt.plusMinutes(30);
        }
    }
    // Method to check if the OTP has expired. Compares the current time with `expiredAt` and returns true if the OTP is expired.
    @Transient
    public boolean isOtpExpired() {
        return LocalDateTime.now().isAfter(expiredAt);
    }

}
